#!/usr/bin/env bash

# Load tasks for individual platforms
tw_tasks_dir="$(readlink -f "${BASH_SOURCE[0]}" | xargs realpath | xargs dirname)"
. "${tw_tasks_dir}/debian"
. "${tw_tasks_dir}/fedora"
. "${tw_tasks_dir}/arch"
. "${tw_tasks_dir}/void"

# Function to set hostname
tw_task_set_hostname () {
    tw_log "Current hostname is '${HOSTNAME}'"

    tw_prompt "Enter a new hostname:" tw_temp
    tw_execute_eval "echo \"${tw_temp}\" | sudo tee /etc/hostname"

    tw_handle_last_command_status "${?}" \
                                  "Hostname set to '${tw_temp}'" \
                                  "Hostname could not be set!"

    tw_print_separator
}

# Function to create a new user
tw_task_create_users () {
    tw_prompt "Enter a username:" tw_temp_username
    tw_prompt "Enter the full name of the user:" tw_temp_full_name

    tw_temp_shell=$(cat /etc/shells | fzf --prompt "Select the default shell for the user:")
    tw_execute sudo useradd "${tw_temp_username}" -m -g users -c "${tw_temp_full_name}" -s "${tw_temp_shell}"

    tw_handle_last_command_status "${?}" \
                                  "User '${tw_temp_username}' successfully created!" \
                                  "User could not be created!"

    tw_execute sudo passwd "${tw_temp_username}"

    tw_log "You still need to edit /etc/sudoers with 'visudo' command for this user to be able to run sudo commands."

    tw_print_separator
}

# Function to change shell of a particular user
tw_task_change_user_shell () {
    tw_log "Current active shell is '${SHELL}'"

    tw_prompt "Enter the username for the user (default: ${USER}):" tw_temp_username

    tw_temp_shell=$(cat /etc/shells | fzf --prompt "Select the default shell for the user:")

    if [ "${tw_temp_username}" ]; then
        tw_execute sudo usermod -s "${tw_temp_shell}" "${tw_temp_username}"
    else
        tw_execute sudo usermod -s "${tw_temp_shell}" ${USER}
    fi

    tw_handle_last_command_status "${?}" \
                                  "Shell changed to '${tw_temp_shell}', you may need to re-login to see the changes." \
                                  "Shell could not be changed!"

    tw_print_separator
}

# Function to generate SSH key
tw_task_generate_ssh_key () {
    tw_prompt "Enter a comment (could be your email address) for the key:" tw_temp

    tw_execute ssh-keygen -t rsa -b 4096 -C "${tw_temp}"

    tw_print_separator
}

# Function to add additional software repos
tw_task_add_additional_software_sources () {
    tw_execute_based_on_platform tw_task_debian_add_additional_software_sources \
                                 tw_task_fedora_add_additional_software_sources \
                                 tw_task_arch_add_additional_software_sources \
                                 tw_task_void_add_additional_software_sources

    tw_print_separator
}

# Function to setup GUI from a CUI environment
tw_task_setup_gui () {
    tw_execute_based_on_platform tw_task_debian_setup_gui \
                                 tw_task_fedora_setup_gui \
                                 tw_task_arch_setup_gui \
                                 tw_task_void_setup_gui

    if [ !"${1}" = false ]; then
        tw_log "Please reboot the system to use the GUI mode"
        tw_confirm "Reboot now?" \
                   tw_reboot_now \
                   "Reboot skipped."
    fi

    tw_print_separator
}

# Function to install a display manager
tw_task_install_display_manager () {
    tw_execute_based_on_platform tw_task_debian_install_display_manager \
                                 tw_task_fedora_install_display_manager \
                                 tw_task_arch_install_display_manager \
                                 tw_task_void_install_display_manager

    tw_print_separator
}

# Function to install a desktop environment
tw_task_install_desktop_environment () {
    tw_execute_based_on_platform tw_task_debian_install_desktop_environment \
                                 tw_task_fedora_install_desktop_environment \
                                 tw_task_arch_install_desktop_environment \
                                 tw_task_void_install_desktop_environment

    tw_print_separator
}
